#include<bits/stdc++.h>

using namespace std;

vector<vector<char>> req(3 , vector<char>(3));
vector<vector<char>> arr(3 , vector<char>(3));
map<vector<vector<char>> , int> mp;

map<int , pair<int,int>> original;
vector<int> dx = {1, 0 , -1 , 0} , dy = {0 , 1 , 0, -1};

void print(vector<vector<char>>&arr){
	for(int i = 0; i < 3; i++){
	 	for(int j = 0; j < 3; j++){
	 		cout<<arr[i][j]<<" ";
	 	}
	 	cout<<endl;
	}
	cout<<endl;
}


bool isvalid(int i , int j){
	if(i < 0 || j < 0 || i >= 3 || j >= 3){
		return false;
	}
	return true;
}

void getpos(vector<vector<char>> &arr , int &x , int &y){
	for(int i = 0; i < 3; i++){
	 	for(int j = 0; j < 3; j++){
	 		if(arr[i][j] == '_'){
	 			x = i;
	 			y = j;
	 			break;
	 		}
	 	}
	}
}

int getheuristic(vector<vector<char>> &arr){
	int value = 0;
	for(int i = 0; i < 3; i++){
		for(int j = 0; j < 3; j++){
			int x = original[arr[i][j] - '0'].first;
			int y = original[arr[i][j] -'0'].second;
			value += (abs(x-i) + abs(y-j));
			
		}
	}
	return value;
}

void shuffle(map<int , pair<int,int>> pos , vector<vector<char>> &arr , int cnt){
	if(arr == req){
  		cout<<"Solution Found !!!!"<<endl;
  		return;
	}
	// assigning values to map
	for(int i = 0; i < 3; i++){
		for(int j = 0; j < 3; j++){
			pos[arr[i][j]] = {i , j};
		}
	}
	mp[arr]++;
	int x , y , mini = INT_MAX;
	vector<vector<char>> final;
	getpos(arr , x , y);
	for(int i = 0; i < 4; i++){
		int xt = x + dx[i] , yt = y + dy[i];
		if(isvalid(xt , yt)){
			vector<vector<char>> temp = arr;
			int u = temp[x][y];
			temp[x][y] = temp[xt][yt];
			temp[xt][yt] = u;
			if(mp[temp] >= 1){
				continue;
			}
			int value = getheuristic(temp) + cnt;
			if(value < mini){
				final = temp;
				mini = value;
			}
			
		}
	}

	cout<<"The heuristic value of this matrix f(n) + g(n) is "<<getheuristic(final)<<endl;
	print(final);cout<<endl;
	shuffle(pos , final , cnt+1);

}


int main(){
	#ifndef ONLINE_JUDGE
		freopen("input.txt" , "r", stdin);
		freopen("output.txt", "w", stdout);
	#endif
	map<int, pair<int,int>> temp;
	for(int i = 0; i < 3; i++){
		for(int j = 0; j < 3; j++){
			cin >>req[i][j];
			original[req[i][j]-'0'] = {i , j};
		}
	}
	for(int i = 0; i < 3; i++){
		for(int j = 0; j < 3; j++){
			cin >> arr[i][j];
			temp[arr[i][j]-'0'] = {i  ,j};
		}
	}
	shuffle(temp , arr , 0);
}